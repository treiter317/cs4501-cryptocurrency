{
	"id": "a6e5e416fe8de5c05375ccae4842a5a9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"dAppFiles/EtherPriceOracleConstant.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\n// This file is part of the http://github.com/aaronbloomfield/ccc repository,\n// and is released under the GPL 3.0 license.\n\npragma solidity ^0.8.24;\n\nimport \"./IEtherPriceOracle.sol\";\n\ncontract EtherPriceOracleConstant is IEtherPriceOracle {\n\n    string public constant name = \"A constant EtherPrice oracle that always returns $100.00\";\n\n    string public constant symbol = \"$\";\n\n    uint public constant decimals = 2;\n\n    function supportsInterface(bytes4 interfaceId) external pure override returns (bool) {\n        return interfaceId == type(IEtherPriceOracle).interfaceId || interfaceId == type(IERC165).interfaceId;\n    }\n\n    uint public constant price = 10000; // in cents\n\n}"
			},
			"dAppFiles/IEtherPriceOracle.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\n// This file is part of the http://github.com/aaronbloomfield/ccc repository,\n// and is released under the GPL 3.0 license.\n\npragma solidity ^0.8.24;\n\nimport \"./IERC165.sol\";\n\ninterface IEtherPriceOracle is IERC165 {\n\n\t// The name (really a description) of the implementing contract\n\tfunction name() external pure returns (string memory);\n\n\t// The currency symbol this is being reported in, such as '$'\n\tfunction symbol() external pure returns (string memory);\n\n\t// How many decimals this is being reported in; for cents, it's 2\n\tfunction decimals() external pure returns (uint);\n\n\t// The current price, in cents, of the (fake) ether\n\tfunction price() external view returns (uint);\n\n\t// also supportsInterface() from IERC165.sol\n}\n"
			},
			"dAppFiles/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"dAppFiles/EtherPriceOracleConstant.sol": {
				"EtherPriceOracleConstant": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"dAppFiles/EtherPriceOracleConstant.sol\":232:730  contract EtherPriceOracleConstant is IEtherPriceOracle {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":232:730  contract EtherPriceOracleConstant is IEtherPriceOracle {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa035b1fe\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":471:674  function supportsInterface(bytes4 interfaceId) external pure override returns (bool) {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":294:382  string public constant name = \"A constant EtherPrice oracle that always returns $100.00\" */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":431:464  uint public constant decimals = 2 */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":389:424  string public constant symbol = \"$\" */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":680:714  uint public constant price = 10000 */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":471:674  function supportsInterface(bytes4 interfaceId) external pure override returns (bool) {... */\n    tag_11:\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":550:554  bool */\n      0x00\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":588:623  type(IEtherPriceOracle).interfaceId */\n      0x022c11db00000000000000000000000000000000000000000000000000000000\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":573:623  interfaceId == type(IEtherPriceOracle).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":573:584  interfaceId */\n      dup3\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":573:623  interfaceId == type(IEtherPriceOracle).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":573:667  interfaceId == type(IEtherPriceOracle).interfaceId || interfaceId == type(IERC165).interfaceId */\n      dup1\n      tag_29\n      jumpi\n      pop\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":642:667  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":627:667  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":627:638  interfaceId */\n      dup3\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":627:667  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":573:667  interfaceId == type(IEtherPriceOracle).interfaceId || interfaceId == type(IERC165).interfaceId */\n    tag_29:\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":566:667  return interfaceId == type(IEtherPriceOracle).interfaceId || interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":471:674  function supportsInterface(bytes4 interfaceId) external pure override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":294:382  string public constant name = \"A constant EtherPrice oracle that always returns $100.00\" */\n    tag_15:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x38\n      dup2\n      mstore\n      0x20\n      add\n      data_76399017636da76928d136343342b868f03bd2035638cb04ca6bf2da4a097251\n      0x38\n      swap2\n      codecopy\n      dup2\n      jump\t// out\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":431:464  uint public constant decimals = 2 */\n    tag_19:\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":463:464  2 */\n      0x02\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":431:464  uint public constant decimals = 2 */\n      dup2\n      jump\t// out\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":389:424  string public constant symbol = \"$\" */\n    tag_23:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x2400000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":680:714  uint public constant price = 10000 */\n    tag_26:\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":709:714  10000 */\n      0x2710\n        /* \"dAppFiles/EtherPriceOracleConstant.sol\":680:714  uint public constant price = 10000 */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_31:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_33:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_34:\n        /* \"#utility.yul\":561:584   */\n      tag_51\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_33\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_52:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_35:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_54\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_34\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_10:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_57\n      tag_31\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":833:952   */\n    tag_56:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_58\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_35\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_36:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_37:\n        /* \"#utility.yul\":1268:1289   */\n      tag_61\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_36\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_13:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_63\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_37\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_38:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_39:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_40:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_67:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_67)\n    tag_69:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_41:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_42:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_72\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_38\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2329:2400   */\n      tag_73\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_39\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_74\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_40\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2499:2528   */\n      tag_75\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_41\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_17:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_77\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_42\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_43:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3061   */\n    tag_44:\n        /* \"#utility.yul\":3030:3054   */\n      tag_80\n        /* \"#utility.yul\":3048:3053   */\n      dup2\n        /* \"#utility.yul\":3030:3054   */\n      tag_43\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3025:3028   */\n      dup3\n        /* \"#utility.yul\":3018:3055   */\n      mstore\n        /* \"#utility.yul\":2943:3061   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3067:3289   */\n    tag_21:\n        /* \"#utility.yul\":3160:3164   */\n      0x00\n        /* \"#utility.yul\":3198:3200   */\n      0x20\n        /* \"#utility.yul\":3187:3196   */\n      dup3\n        /* \"#utility.yul\":3183:3201   */\n      add\n        /* \"#utility.yul\":3175:3201   */\n      swap1\n      pop\n        /* \"#utility.yul\":3211:3282   */\n      tag_82\n        /* \"#utility.yul\":3279:3280   */\n      0x00\n        /* \"#utility.yul\":3268:3277   */\n      dup4\n        /* \"#utility.yul\":3264:3281   */\n      add\n        /* \"#utility.yul\":3255:3261   */\n      dup5\n        /* \"#utility.yul\":3211:3282   */\n      tag_44\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3067:3289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_76399017636da76928d136343342b868f03bd2035638cb04ca6bf2da4a097251 4120636f6e7374616e742045746865725072696365206f7261636c65207468617420616c776179732072657475726e7320243130302e3030\n\n    auxdata: 0xa264697066735822122080a7fd004f9c146fa3b8039dfbd494277292a8caef6ed220118e9d2731b00a1164736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506104328061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c806301ffc9a71461005957806306fdde0314610089578063313ce567146100a757806395d89b41146100c5578063a035b1fe146100e3575b5f80fd5b610073600480360381019061006e919061028b565b610101565b60405161008091906102d0565b60405180910390f35b6100916101d2565b60405161009e9190610373565b60405180910390f35b6100af6101ee565b6040516100bc91906103ab565b60405180910390f35b6100cd6101f3565b6040516100da9190610373565b60405180910390f35b6100eb61022c565b6040516100f891906103ab565b60405180910390f35b5f7f022c11db000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101cb57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6040518060600160405280603881526020016103c56038913981565b600281565b6040518060400160405280600181526020017f240000000000000000000000000000000000000000000000000000000000000081525081565b61271081565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61026a81610236565b8114610274575f80fd5b50565b5f8135905061028581610261565b92915050565b5f602082840312156102a05761029f610232565b5b5f6102ad84828501610277565b91505092915050565b5f8115159050919050565b6102ca816102b6565b82525050565b5f6020820190506102e35f8301846102c1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610320578082015181840152602081019050610305565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610345826102e9565b61034f81856102f3565b935061035f818560208601610303565b6103688161032b565b840191505092915050565b5f6020820190508181035f83015261038b818461033b565b905092915050565b5f819050919050565b6103a581610393565b82525050565b5f6020820190506103be5f83018461039c565b9291505056fe4120636f6e7374616e742045746865725072696365206f7261636c65207468617420616c776179732072657475726e7320243130302e3030a264697066735822122080a7fd004f9c146fa3b8039dfbd494277292a8caef6ed220118e9d2731b00a1164736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x432 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x28B JUMP JUMPDEST PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x22C11DB00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1CB JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C5 PUSH1 0x38 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2400000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A DUP2 PUSH2 0x236 JUMP JUMPDEST DUP2 EQ PUSH2 0x274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x285 DUP2 PUSH2 0x261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A0 JUMPI PUSH2 0x29F PUSH2 0x232 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AD DUP5 DUP3 DUP6 ADD PUSH2 0x277 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CA DUP2 PUSH2 0x2B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E3 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x320 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x305 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x345 DUP3 PUSH2 0x2E9 JUMP JUMPDEST PUSH2 0x34F DUP2 DUP6 PUSH2 0x2F3 JUMP JUMPDEST SWAP4 POP PUSH2 0x35F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x303 JUMP JUMPDEST PUSH2 0x368 DUP2 PUSH2 0x32B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x38B DUP2 DUP5 PUSH2 0x33B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5 DUP2 PUSH2 0x393 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BE PUSH0 DUP4 ADD DUP5 PUSH2 0x39C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID COINBASE KECCAK256 PUSH4 0x6F6E7374 PUSH2 0x6E74 KECCAK256 GASLIMIT PUSH21 0x6865725072696365206F7261636C65207468617420 PUSH2 0x6C77 PUSH2 0x7973 KECCAK256 PUSH19 0x657475726E7320243130302E3030A264697066 PUSH20 0x5822122080A7FD004F9C146FA3B8039DFBD49427 PUSH19 0x92A8CAEF6ED220118E9D2731B00A1164736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "232:498:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@decimals_13": {
									"entryPoint": 494,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_7": {
									"entryPoint": 466,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price_39": {
									"entryPoint": 556,
									"id": 39,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_36": {
									"entryPoint": 257,
									"id": 36,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_10": {
									"entryPoint": 499,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3292:3",
										"nodeType": "YulBlock",
										"src": "0:3292:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "378:105:3",
													"nodeType": "YulBlock",
													"src": "378:105:3",
													"statements": [
														{
															"nativeSrc": "388:89:3",
															"nodeType": "YulAssignment",
															"src": "388:89:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:3",
																		"nodeType": "YulLiteral",
																		"src": "410:66:3",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:3"
																},
																"nativeSrc": "399:78:3",
																"nodeType": "YulFunctionCall",
																"src": "399:78:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:3",
														"nodeType": "YulTypedName",
														"src": "360:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:3",
														"nodeType": "YulTypedName",
														"src": "370:7:3",
														"type": ""
													}
												],
												"src": "334:149:3"
											},
											{
												"body": {
													"nativeSrc": "531:78:3",
													"nodeType": "YulBlock",
													"src": "531:78:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:3",
																"nodeType": "YulBlock",
																"src": "587:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:3",
																					"nodeType": "YulLiteral",
																					"src": "596:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:3",
																					"nodeType": "YulLiteral",
																					"src": "599:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:3"
																			},
																			"nativeSrc": "589:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:3"
																		},
																		"nativeSrc": "589:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:3",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:3"
																				},
																				"nativeSrc": "561:23:3",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:3"
																		},
																		"nativeSrc": "551:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:3"
																},
																"nativeSrc": "544:42:3",
																"nodeType": "YulFunctionCall",
																"src": "544:42:3"
															},
															"nativeSrc": "541:62:3",
															"nodeType": "YulIf",
															"src": "541:62:3"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:3",
														"nodeType": "YulTypedName",
														"src": "524:5:3",
														"type": ""
													}
												],
												"src": "489:120:3"
											},
											{
												"body": {
													"nativeSrc": "666:86:3",
													"nodeType": "YulBlock",
													"src": "666:86:3",
													"statements": [
														{
															"nativeSrc": "676:29:3",
															"nodeType": "YulAssignment",
															"src": "676:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:3"
																},
																"nativeSrc": "685:20:3",
																"nodeType": "YulFunctionCall",
																"src": "685:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:3",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:3"
																},
																"nativeSrc": "714:32:3",
																"nodeType": "YulFunctionCall",
																"src": "714:32:3"
															},
															"nativeSrc": "714:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:3"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:3",
														"nodeType": "YulTypedName",
														"src": "644:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:3",
														"nodeType": "YulTypedName",
														"src": "652:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:3",
														"nodeType": "YulTypedName",
														"src": "660:5:3",
														"type": ""
													}
												],
												"src": "615:137:3"
											},
											{
												"body": {
													"nativeSrc": "823:262:3",
													"nodeType": "YulBlock",
													"src": "823:262:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:3",
																"nodeType": "YulBlock",
																"src": "869:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:3"
																			},
																			"nativeSrc": "871:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:3"
																		},
																		"nativeSrc": "871:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:3"
																		},
																		"nativeSrc": "840:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:3",
																		"nodeType": "YulLiteral",
																		"src": "865:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:3"
																},
																"nativeSrc": "836:32:3",
																"nodeType": "YulFunctionCall",
																"src": "836:32:3"
															},
															"nativeSrc": "833:119:3",
															"nodeType": "YulIf",
															"src": "833:119:3"
														},
														{
															"nativeSrc": "962:116:3",
															"nodeType": "YulBlock",
															"src": "962:116:3",
															"statements": [
																{
																	"nativeSrc": "977:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:3",
																		"nodeType": "YulLiteral",
																		"src": "991:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:3",
																			"nodeType": "YulTypedName",
																			"src": "981:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:3",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:3"
																				},
																				"nativeSrc": "1036:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:3",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:3"
																		},
																		"nativeSrc": "1016:52:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:3",
														"nodeType": "YulTypedName",
														"src": "793:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:3",
														"nodeType": "YulTypedName",
														"src": "804:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:3",
														"nodeType": "YulTypedName",
														"src": "816:6:3",
														"type": ""
													}
												],
												"src": "758:327:3"
											},
											{
												"body": {
													"nativeSrc": "1133:48:3",
													"nodeType": "YulBlock",
													"src": "1133:48:3",
													"statements": [
														{
															"nativeSrc": "1143:32:3",
															"nodeType": "YulAssignment",
															"src": "1143:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:3"
																		},
																		"nativeSrc": "1161:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:3"
																},
																"nativeSrc": "1154:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:3",
														"nodeType": "YulTypedName",
														"src": "1115:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:3",
														"nodeType": "YulTypedName",
														"src": "1125:7:3",
														"type": ""
													}
												],
												"src": "1091:90:3"
											},
											{
												"body": {
													"nativeSrc": "1246:50:3",
													"nodeType": "YulBlock",
													"src": "1246:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:3"
																		},
																		"nativeSrc": "1268:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:3"
																},
																"nativeSrc": "1256:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:3"
															},
															"nativeSrc": "1256:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:3",
														"nodeType": "YulTypedName",
														"src": "1234:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:3",
														"nodeType": "YulTypedName",
														"src": "1241:3:3",
														"type": ""
													}
												],
												"src": "1187:109:3"
											},
											{
												"body": {
													"nativeSrc": "1394:118:3",
													"nodeType": "YulBlock",
													"src": "1394:118:3",
													"statements": [
														{
															"nativeSrc": "1404:26:3",
															"nodeType": "YulAssignment",
															"src": "1404:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:3"
																},
																"nativeSrc": "1412:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:3"
																		},
																		"nativeSrc": "1487:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:3"
																},
																"nativeSrc": "1440:65:3",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:3"
															},
															"nativeSrc": "1440:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:3",
														"nodeType": "YulTypedName",
														"src": "1366:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:3",
														"nodeType": "YulTypedName",
														"src": "1378:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:3",
														"nodeType": "YulTypedName",
														"src": "1389:4:3",
														"type": ""
													}
												],
												"src": "1302:210:3"
											},
											{
												"body": {
													"nativeSrc": "1577:40:3",
													"nodeType": "YulBlock",
													"src": "1577:40:3",
													"statements": [
														{
															"nativeSrc": "1588:22:3",
															"nodeType": "YulAssignment",
															"src": "1588:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:3"
																},
																"nativeSrc": "1598:12:3",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:3",
														"nodeType": "YulTypedName",
														"src": "1560:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:3",
														"nodeType": "YulTypedName",
														"src": "1570:6:3",
														"type": ""
													}
												],
												"src": "1518:99:3"
											},
											{
												"body": {
													"nativeSrc": "1719:73:3",
													"nodeType": "YulBlock",
													"src": "1719:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:3"
																},
																"nativeSrc": "1729:19:3",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:3"
															},
															"nativeSrc": "1729:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:3"
														},
														{
															"nativeSrc": "1757:29:3",
															"nodeType": "YulAssignment",
															"src": "1757:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:3"
																},
																"nativeSrc": "1772:14:3",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:3",
														"nodeType": "YulTypedName",
														"src": "1691:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:3",
														"nodeType": "YulTypedName",
														"src": "1696:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:3",
														"nodeType": "YulTypedName",
														"src": "1707:11:3",
														"type": ""
													}
												],
												"src": "1623:169:3"
											},
											{
												"body": {
													"nativeSrc": "1860:184:3",
													"nodeType": "YulBlock",
													"src": "1860:184:3",
													"statements": [
														{
															"nativeSrc": "1870:10:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:3",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:3",
																"nodeType": "YulLiteral",
																"src": "1879:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:3",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:3",
																"nodeType": "YulBlock",
																"src": "1939:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:3"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:3",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:3"
																					},
																					"nativeSrc": "1960:11:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:3"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:3",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:3"
																							},
																							"nativeSrc": "1979:11:3",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:3"
																					},
																					"nativeSrc": "1973:18:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:3"
																			},
																			"nativeSrc": "1953:39:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:3"
																		},
																		"nativeSrc": "1953:39:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:3"
																},
																"nativeSrc": "1897:13:3",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:3"
															},
															"nativeSrc": "1889:113:3",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:3",
																"nodeType": "YulBlock",
																"src": "1911:19:3",
																"statements": [
																	{
																		"nativeSrc": "1913:15:3",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:3",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:3",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:3"
																			},
																			"nativeSrc": "1918:10:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:3",
																"nodeType": "YulBlock",
																"src": "1893:3:3",
																"statements": []
															},
															"src": "1889:113:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:3"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:3"
																		},
																		"nativeSrc": "2018:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:3"
																},
																"nativeSrc": "2011:27:3",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:3"
															},
															"nativeSrc": "2011:27:3",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:3",
														"nodeType": "YulTypedName",
														"src": "1842:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:3",
														"nodeType": "YulTypedName",
														"src": "1847:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:3",
														"nodeType": "YulTypedName",
														"src": "1852:6:3",
														"type": ""
													}
												],
												"src": "1798:246:3"
											},
											{
												"body": {
													"nativeSrc": "2098:54:3",
													"nodeType": "YulBlock",
													"src": "2098:54:3",
													"statements": [
														{
															"nativeSrc": "2108:38:3",
															"nodeType": "YulAssignment",
															"src": "2108:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:3"
																		},
																		"nativeSrc": "2122:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:3"
																		},
																		"nativeSrc": "2138:7:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:3"
																},
																"nativeSrc": "2118:28:3",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:3",
														"nodeType": "YulTypedName",
														"src": "2081:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:3",
														"nodeType": "YulTypedName",
														"src": "2091:6:3",
														"type": ""
													}
												],
												"src": "2050:102:3"
											},
											{
												"body": {
													"nativeSrc": "2250:285:3",
													"nodeType": "YulBlock",
													"src": "2250:285:3",
													"statements": [
														{
															"nativeSrc": "2260:53:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:3",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:3"
																},
																"nativeSrc": "2274:39:3",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:3",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:3",
															"nodeType": "YulAssignment",
															"src": "2322:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:3"
																},
																"nativeSrc": "2329:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:3",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:3"
																		},
																		"nativeSrc": "2444:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:3"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:3",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:3"
																},
																"nativeSrc": "2409:65:3",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:3"
															},
															"nativeSrc": "2409:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:3"
														},
														{
															"nativeSrc": "2483:46:3",
															"nodeType": "YulAssignment",
															"src": "2483:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:3",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:3"
																		},
																		"nativeSrc": "2499:29:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:3"
																},
																"nativeSrc": "2490:39:3",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:3",
														"nodeType": "YulTypedName",
														"src": "2231:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:3",
														"nodeType": "YulTypedName",
														"src": "2238:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:3",
														"nodeType": "YulTypedName",
														"src": "2246:3:3",
														"type": ""
													}
												],
												"src": "2158:377:3"
											},
											{
												"body": {
													"nativeSrc": "2659:195:3",
													"nodeType": "YulBlock",
													"src": "2659:195:3",
													"statements": [
														{
															"nativeSrc": "2669:26:3",
															"nodeType": "YulAssignment",
															"src": "2669:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:3"
																},
																"nativeSrc": "2677:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:3"
																		},
																		"nativeSrc": "2712:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:3"
																		},
																		"nativeSrc": "2731:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:3"
																},
																"nativeSrc": "2705:47:3",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:3"
															},
															"nativeSrc": "2705:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:3"
														},
														{
															"nativeSrc": "2761:86:3",
															"nodeType": "YulAssignment",
															"src": "2761:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:3"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:3",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:3"
																},
																"nativeSrc": "2769:78:3",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:3",
														"nodeType": "YulTypedName",
														"src": "2631:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:3",
														"nodeType": "YulTypedName",
														"src": "2643:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:3",
														"nodeType": "YulTypedName",
														"src": "2654:4:3",
														"type": ""
													}
												],
												"src": "2541:313:3"
											},
											{
												"body": {
													"nativeSrc": "2905:32:3",
													"nodeType": "YulBlock",
													"src": "2905:32:3",
													"statements": [
														{
															"nativeSrc": "2915:16:3",
															"nodeType": "YulAssignment",
															"src": "2915:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:3",
																"nodeType": "YulIdentifier",
																"src": "2926:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:3",
														"nodeType": "YulTypedName",
														"src": "2887:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:3",
														"nodeType": "YulTypedName",
														"src": "2897:7:3",
														"type": ""
													}
												],
												"src": "2860:77:3"
											},
											{
												"body": {
													"nativeSrc": "3008:53:3",
													"nodeType": "YulBlock",
													"src": "3008:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3025:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3025:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3048:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3048:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3030:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "3030:17:3"
																		},
																		"nativeSrc": "3030:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3018:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3018:6:3"
																},
																"nativeSrc": "3018:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3018:37:3"
															},
															"nativeSrc": "3018:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "3018:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2943:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2996:5:3",
														"nodeType": "YulTypedName",
														"src": "2996:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3003:3:3",
														"nodeType": "YulTypedName",
														"src": "3003:3:3",
														"type": ""
													}
												],
												"src": "2943:118:3"
											},
											{
												"body": {
													"nativeSrc": "3165:124:3",
													"nodeType": "YulBlock",
													"src": "3165:124:3",
													"statements": [
														{
															"nativeSrc": "3175:26:3",
															"nodeType": "YulAssignment",
															"src": "3175:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3187:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3187:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3198:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3198:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3183:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3183:3:3"
																},
																"nativeSrc": "3183:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3183:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3175:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3175:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3255:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3255:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3268:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3268:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3279:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3279:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3264:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3264:3:3"
																		},
																		"nativeSrc": "3264:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3264:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3211:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "3211:43:3"
																},
																"nativeSrc": "3211:71:3",
																"nodeType": "YulFunctionCall",
																"src": "3211:71:3"
															},
															"nativeSrc": "3211:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "3211:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3067:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3137:9:3",
														"nodeType": "YulTypedName",
														"src": "3137:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3149:6:3",
														"nodeType": "YulTypedName",
														"src": "3149:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3160:4:3",
														"nodeType": "YulTypedName",
														"src": "3160:4:3",
														"type": ""
													}
												],
												"src": "3067:222:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c806301ffc9a71461005957806306fdde0314610089578063313ce567146100a757806395d89b41146100c5578063a035b1fe146100e3575b5f80fd5b610073600480360381019061006e919061028b565b610101565b60405161008091906102d0565b60405180910390f35b6100916101d2565b60405161009e9190610373565b60405180910390f35b6100af6101ee565b6040516100bc91906103ab565b60405180910390f35b6100cd6101f3565b6040516100da9190610373565b60405180910390f35b6100eb61022c565b6040516100f891906103ab565b60405180910390f35b5f7f022c11db000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101cb57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6040518060600160405280603881526020016103c56038913981565b600281565b6040518060400160405280600181526020017f240000000000000000000000000000000000000000000000000000000000000081525081565b61271081565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61026a81610236565b8114610274575f80fd5b50565b5f8135905061028581610261565b92915050565b5f602082840312156102a05761029f610232565b5b5f6102ad84828501610277565b91505092915050565b5f8115159050919050565b6102ca816102b6565b82525050565b5f6020820190506102e35f8301846102c1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610320578082015181840152602081019050610305565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610345826102e9565b61034f81856102f3565b935061035f818560208601610303565b6103688161032b565b840191505092915050565b5f6020820190508181035f83015261038b818461033b565b905092915050565b5f819050919050565b6103a581610393565b82525050565b5f6020820190506103be5f83018461039c565b9291505056fe4120636f6e7374616e742045746865725072696365206f7261636c65207468617420616c776179732072657475726e7320243130302e3030a264697066735822122080a7fd004f9c146fa3b8039dfbd494277292a8caef6ed220118e9d2731b00a1164736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x28B JUMP JUMPDEST PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x22C11DB00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1CB JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C5 PUSH1 0x38 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2400000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A DUP2 PUSH2 0x236 JUMP JUMPDEST DUP2 EQ PUSH2 0x274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x285 DUP2 PUSH2 0x261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A0 JUMPI PUSH2 0x29F PUSH2 0x232 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AD DUP5 DUP3 DUP6 ADD PUSH2 0x277 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CA DUP2 PUSH2 0x2B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E3 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x320 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x305 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x345 DUP3 PUSH2 0x2E9 JUMP JUMPDEST PUSH2 0x34F DUP2 DUP6 PUSH2 0x2F3 JUMP JUMPDEST SWAP4 POP PUSH2 0x35F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x303 JUMP JUMPDEST PUSH2 0x368 DUP2 PUSH2 0x32B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x38B DUP2 DUP5 PUSH2 0x33B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5 DUP2 PUSH2 0x393 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BE PUSH0 DUP4 ADD DUP5 PUSH2 0x39C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID COINBASE KECCAK256 PUSH4 0x6F6E7374 PUSH2 0x6E74 KECCAK256 GASLIMIT PUSH21 0x6865725072696365206F7261636C65207468617420 PUSH2 0x6C77 PUSH2 0x7973 KECCAK256 PUSH19 0x657475726E7320243130302E3030A264697066 PUSH20 0x5822122080A7FD004F9C146FA3B8039DFBD49427 PUSH19 0x92A8CAEF6ED220118E9D2731B00A1164736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "232:498:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;471:203;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;294:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;431:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;389:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;680:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;471:203;550:4;588:35;573:50;;;:11;:50;;;;:94;;;;642:25;627:40;;;:11;:40;;;;573:94;566:101;;471:203;;;:::o;294:88::-;;;;;;;;;;;;;;;;;;;:::o;431:33::-;463:1;431:33;:::o;389:35::-;;;;;;;;;;;;;;;;;;;:::o;680:34::-;709:5;680:34;:::o;88:117:3:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:118::-;3030:24;3048:5;3030:24;:::i;:::-;3025:3;3018:37;2943:118;;:::o;3067:222::-;3160:4;3198:2;3187:9;3183:18;3175:26;;3211:71;3279:1;3268:9;3264:17;3255:6;3211:71;:::i;:::-;3067:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "214800",
								"executionCost": "255",
								"totalCost": "215055"
							},
							"external": {
								"decimals()": "347",
								"name()": "infinite",
								"price()": "391",
								"supportsInterface(bytes4)": "653",
								"symbol()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 730,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 730,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 730,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 232,
									"end": 730,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 232,
									"end": 730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 232,
									"end": 730,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 232,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 232,
									"end": 730,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 232,
									"end": 730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 232,
									"end": 730,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 232,
									"end": 730,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 232,
									"end": 730,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 232,
									"end": 730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 232,
									"end": 730,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 232,
									"end": 730,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 730,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 232,
									"end": 730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 730,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080a7fd004f9c146fa3b8039dfbd494277292a8caef6ed220118e9d2731b00a1164736f6c63430008180033",
									".code": [
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "A035B1FE"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 471,
											"end": 674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 471,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 471,
											"end": 674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 471,
											"end": 674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 471,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 471,
											"end": 674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 471,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 471,
											"end": 674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 471,
											"end": 674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 471,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 471,
											"end": 674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 294,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 294,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 431,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 431,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 431,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 431,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 431,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 389,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 389,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 680,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 680,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 680,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 680,
											"end": 714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 680,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 680,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 471,
											"end": 674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "22C11DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 573,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 573,
											"end": 623,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 573,
											"end": 623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 573,
											"end": 584,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 573,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 573,
											"end": 623,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 573,
											"end": 623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 573,
											"end": 623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 642,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 627,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 667,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 627,
											"end": 667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 627,
											"end": 638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 627,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 667,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 627,
											"end": 667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 627,
											"end": 667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 573,
											"end": 667,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 573,
											"end": 667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 566,
											"end": 667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "PUSH data",
											"source": 0,
											"value": "76399017636DA76928D136343342B868F03BD2035638CB04CA6BF2DA4A097251"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 294,
											"end": 382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 294,
											"end": 382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 431,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 463,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 431,
											"end": 464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 431,
											"end": 464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "2400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 389,
											"end": 424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 389,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 680,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 709,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 680,
											"end": 714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 680,
											"end": 714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2943,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3048,
											"end": 3053,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3030,
											"end": 3054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3025,
											"end": 3028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 3061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3289,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3067,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3164,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3200,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3196,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3183,
											"end": 3201,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3211,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3277,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3255,
											"end": 3261,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3211,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3211,
											"end": 3282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3211,
											"end": 3282,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3211,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									],
									".data": {
										"76399017636DA76928D136343342B868F03BD2035638CB04CA6BF2DA4A097251": "4120636f6e7374616e742045746865725072696365206f7261636c65207468617420616c776179732072657475726e7320243130302e3030"
									}
								}
							},
							"sourceList": [
								"dAppFiles/EtherPriceOracleConstant.sol",
								"dAppFiles/IERC165.sol",
								"dAppFiles/IEtherPriceOracle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"price()": "a035b1fe",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"dAppFiles/EtherPriceOracleConstant.sol\":\"EtherPriceOracleConstant\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"dAppFiles/EtherPriceOracleConstant.sol\":{\"keccak256\":\"0x4dd5d4a76b3252e66024b0d1588f683addfb3cae3b9392cacaf35c73eeb3fe82\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://04a230f9d1399da0d7b878c97aeec79503e017f17e83d85c6c6c9aea61633465\",\"dweb:/ipfs/QmRJHAAcqoGeYKCMT3B5fqLgko9TaJNnT8mkYRiwSFnzMM\"]},\"dAppFiles/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"dAppFiles/IEtherPriceOracle.sol\":{\"keccak256\":\"0x074e8b529e79c5aadcd35a58ac9b61b167698d3d6eb552544e7ac2a5ee942a69\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://52890b5d4628406cba723d8b9d74d0cd7538a4918ececf77aabffb61458c7e67\",\"dweb:/ipfs/QmZ5hRrZHzWgwCKS1snAuhqxoSB7K9wHnxo9XvtKYdekSA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"dAppFiles/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"dAppFiles/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"dAppFiles/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"dAppFiles/IEtherPriceOracle.sol": {
				"IEtherPriceOracle": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"price()": "a035b1fe",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"dAppFiles/IEtherPriceOracle.sol\":\"IEtherPriceOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"dAppFiles/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"dAppFiles/IEtherPriceOracle.sol\":{\"keccak256\":\"0x074e8b529e79c5aadcd35a58ac9b61b167698d3d6eb552544e7ac2a5ee942a69\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://52890b5d4628406cba723d8b9d74d0cd7538a4918ececf77aabffb61458c7e67\",\"dweb:/ipfs/QmZ5hRrZHzWgwCKS1snAuhqxoSB7K9wHnxo9XvtKYdekSA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"dAppFiles/EtherPriceOracleConstant.sol": {
				"ast": {
					"absolutePath": "dAppFiles/EtherPriceOracleConstant.sol",
					"exportedSymbols": {
						"EtherPriceOracleConstant": [
							40
						],
						"IERC165": [
							52
						],
						"IEtherPriceOracle": [
							78
						]
					},
					"id": 41,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "171:24:0"
						},
						{
							"absolutePath": "dAppFiles/IEtherPriceOracle.sol",
							"file": "./IEtherPriceOracle.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 41,
							"sourceUnit": 79,
							"src": "197:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IEtherPriceOracle",
										"nameLocations": [
											"269:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 78,
										"src": "269:17:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "269:17:0"
								}
							],
							"canonicalName": "EtherPriceOracleConstant",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 40,
							"linearizedBaseContracts": [
								40,
								78,
								52
							],
							"name": "EtherPriceOracleConstant",
							"nameLocation": "241:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										62
									],
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 7,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "317:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 40,
									"src": "294:88:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 5,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "294:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4120636f6e7374616e742045746865725072696365206f7261636c65207468617420616c776179732072657475726e7320243130302e3030",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "324:58:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_76399017636da76928d136343342b868f03bd2035638cb04ca6bf2da4a097251",
											"typeString": "literal_string \"A constant EtherPrice oracle that always returns $100.00\""
										},
										"value": "A constant EtherPrice oracle that always returns $100.00"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										67
									],
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 10,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "412:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 40,
									"src": "389:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 8,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "389:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "24",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "421:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b104e6a8e5e1477c7a8346486401cbd4f10ab4840a4201066d9b59b747cb6f88",
											"typeString": "literal_string \"$\""
										},
										"value": "$"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										72
									],
									"constant": true,
									"functionSelector": "313ce567",
									"id": 13,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "452:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 40,
									"src": "431:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "431:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "463:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										51
									],
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "556:118:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 21,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "573:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 23,
																		"name": "IEtherPriceOracle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 78,
																		"src": "593:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IEtherPriceOracle_$78_$",
																			"typeString": "type(contract IEtherPriceOracle)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IEtherPriceOracle_$78_$",
																			"typeString": "type(contract IEtherPriceOracle)"
																		}
																	],
																	"id": 22,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "588:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "588:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IEtherPriceOracle_$78",
																	"typeString": "type(contract IEtherPriceOracle)"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "612:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "588:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "573:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 27,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "627:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 29,
																		"name": "IERC165",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "647:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$52_$",
																			"typeString": "type(contract IERC165)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$52_$",
																			"typeString": "type(contract IERC165)"
																		}
																	],
																	"id": 28,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "642:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "642:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$52",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "656:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "642:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "627:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "573:94:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 20,
												"id": 34,
												"nodeType": "Return",
												"src": "566:101:0"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "480:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 17,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "532:8:0"
									},
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "505:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "498:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 14,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "498:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:20:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "550:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 18,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "550:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "549:6:0"
									},
									"scope": 40,
									"src": "471:203:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										77
									],
									"constant": true,
									"functionSelector": "a035b1fe",
									"id": 39,
									"mutability": "constant",
									"name": "price",
									"nameLocation": "701:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 40,
									"src": "680:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 37,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "680:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 38,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "709:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								}
							],
							"scope": 41,
							"src": "232:498:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "171:559:0"
				},
				"id": 0
			},
			"dAppFiles/IERC165.sol": {
				"ast": {
					"absolutePath": "dAppFiles/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							52
						]
					},
					"id": 53,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 42,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 43,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:1",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "IERC165",
							"nameLocation": "432:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "818:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 45,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:1"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "861:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:1"
									},
									"scope": 52,
									"src": "791:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 53,
							"src": "422:447:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:1"
				},
				"id": 1
			},
			"dAppFiles/IEtherPriceOracle.sol": {
				"ast": {
					"absolutePath": "dAppFiles/IEtherPriceOracle.sol",
					"exportedSymbols": {
						"IERC165": [
							52
						],
						"IEtherPriceOracle": [
							78
						]
					},
					"id": 79,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 54,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "171:24:2"
						},
						{
							"absolutePath": "dAppFiles/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 55,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 79,
							"sourceUnit": 53,
							"src": "197:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 56,
										"name": "IERC165",
										"nameLocations": [
											"253:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 52,
										"src": "253:7:2"
									},
									"id": 57,
									"nodeType": "InheritanceSpecifier",
									"src": "253:7:2"
								}
							],
							"canonicalName": "IEtherPriceOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 78,
							"linearizedBaseContracts": [
								78,
								52
							],
							"name": "IEtherPriceOracle",
							"nameLocation": "232:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06fdde03",
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "339:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "343:2:2"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "369:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 59,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "369:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "368:15:2"
									},
									"scope": 78,
									"src": "330:54:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 67,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "459:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:2:2"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "491:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 64,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "491:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:15:2"
									},
									"scope": 78,
									"src": "450:56:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "585:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:2:2"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "619:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "619:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:6:2"
									},
									"scope": 78,
									"src": "576:49:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a035b1fe",
									"id": 77,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "690:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:2"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "721:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "721:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:6:2"
									},
									"scope": 78,
									"src": "681:46:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 79,
							"src": "222:554:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "171:606:2"
				},
				"id": 2
			}
		}
	}
}